{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/attempts/attempts.component.html","./src/app/panel/panel.component.html","./src/app/progress/progress.component.html","./src/app/top/top.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/attempts/attempts.component.css","./src/app/attempts/attempts.component.ts","./src/app/panel/panel.component.css","./src/app/panel/panel.component.ts","./src/app/panel/phrases-mock.ts","./src/app/progress/progress.component.css","./src/app/progress/progress.component.ts","./src/app/shared/heart.model.ts","./src/app/top/top.component.css","./src/app/top/top.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-top></app-top>\\n\\n<div *ngIf=\\\"gameInProgress; else endOfGame\\\">\\n    <!--tratativa de teste para checar se o jogo ainda esta em curso se false o proximo não será executado destruindo o painel-->\\n    <app-panel (endGame)=\\\"endGame($event)\\\"></app-panel>\\n    <!--Evento emitido pelo filho panel.component.ts-->\\n</div>\\n    <!--Aqui é exibida a mensagem de derrota diretamente no painel principal-->\\n<ng-template #endOfGame>\\n    <div *ngIf=\\\"typeClosing === 'defeat'; else endOfGameVictory \\\" class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3 style=\\\"color: red\\\"> Game Over, You Lost the game! </h3>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"restartGame()\\\">Try Again?</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n<ng-template #endOfGameVictory>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3 style=\\\"color: green\\\"> Congratulations! You Win! </h3>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"restartGame()\\\">Play Again?</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n    \"","module.exports = \"<!-- HardCoded... <img [src]=\\\"emptyHeart\\\"> Ao usar os [] no src o angular sabe que trata-se de propertybinding puxandos as imagens ou assets do attempts.component.ts-->\\n<!-- HardCoded... <img [src]=\\\"fullHeart\\\">  Ao usar os [] no src o angular sabe que trata-se de propertybinding puxandos as imagens ou assets do attempts.component.ts-->\\n<!-- HardCoded... <img [src]=\\\"fullHeart\\\">  Ao usar os [] no src o angular sabe que trata-se de propertybinding puxandos as imagens ou assets do attempts.component.ts-->\\n\\n<!--OBS: nunca usar o {{}} com o [] interpolation e propertybiding-->\\n\\n<img *ngFor=\\\"let heart of hearts\\\" [src]=\\\"heart.showHeart()\\\" /> <!-- Pega a classe do heart.model.ts usando o array de coracoes-->\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n        <div class='row'>\\n            <div class=\\\"col-sm-6\\\">\\n                <app-progress [progress]=\\\"progress\\\"></app-progress>\\n                <!--Componente progresso dentro do painel para enviar para o progresso no @Input()-->\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"d-flex justify-content-end\\\">\\n                    <app-attempts [attempts]=\\\"attempts\\\"></app-attempts>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h6>{{ instruction }}</h6>\\n                <!--recuperando a instrução com string interpolation {{}}-->\\n                \\n                <p>{{ roundPhrase.phraseEng }}</p>\\n                <!--recuperando o objeto phrases na posicao de array 0 com string interpolation {{}} que será apresentada no panel-->\\n\\n                <!--PEGANDO O QUE FOI DIGITADO NA CAIXA DE TEXTO-->\\n\\n                <div class=\\\"form-group\\\">\\n                    <textarea class=\\\"form-control\\\" rows=\\\"1\\\" (input)=\\\"updateAnswer($event)\\\" [value]=\\\"answer\\\"></textarea>\\n                    <!--[value] two way bind para limpar o campo digitado-->\\n                    <!--(input) associado a classe responsavel por pegar o que foi digitado em panel.component.ts-->\\n                    <!--$event é uma palavra reservada do angular que serve para pegar o conteudo de um campo que esta sendo digitado por exemplo-->\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"d-flex justify-content-end\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"checkAnswer()\\\">CHECK_.</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"progress\\\">\\n        <div class=\\\"progress-bar w-{{ progress }}\\\"></div> <!--classe do bootstrap --- {{ progress }} string interpolation provindo do progress.component.ts-->\\n      </div>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-inverse bg-faded\\\">\\r\\n    <h1 class=\\\"navbar-brand mb-0\\\">{{ title }}</h1> <!-- Ao abrir e fechar chaves duas vezes usamos uma interpolação, provinda do top.component.ts ou seja da class (One way Databinding)-->\\r\\n  </nav>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"p {\\r\\n    font-size: 25px;\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  public gameInProgress: boolean = true\n  public typeClosing: string\n  \n  public endGame(type: string): void {  \n    this.gameInProgress = false\n    this.typeClosing = type\n  }\n\n  public restartGame(): void { //Metodo para reiniciar o jogo\n    this.gameInProgress = true\n    this.typeClosing = undefined\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TopComponent } from './top/top.component';\nimport { PanelComponent } from './panel/panel.component';\nimport { AttemptsComponent } from './attempts/attempts.component';\nimport { ProgressComponent } from './progress/progress.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopComponent,\n    PanelComponent,\n    AttemptsComponent,\n    ProgressComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVtcHRzL2F0dGVtcHRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { Heart } from '../shared/heart.model'\n\n@Component({\n  selector: 'app-attempts',\n  templateUrl: './attempts.component.html',\n  styleUrls: ['./attempts.component.css']\n})\nexport class AttemptsComponent implements OnChanges, OnInit  {\n\n  @Input() public attempts: number\n\n  public hearts: Heart[] = [\n    new Heart(true),\n    new Heart(true),\n    new Heart(true)\n  ] // array de coracoes 4 (caso queira colocar mais coracoes no jogo basta instanciar mais Heart no array...)\n\n  constructor() {\n\n  }\n\n  ngOnChanges() { //inicializado uma unica vez na inicializacao do componente.\n                  //informcao importante aqui: this.attempts\n                  //comparar this.attemps e this.hearts.lenght\n                  \n    if(this.attempts!== this.hearts.length) {\n      let index = this.hearts.length - this.attempts\n      \n      this.hearts[index - 1].full = false //deve-se decrementar 1 porque o primeiro coracao é de indice 0;\n    }\n  }\n\n  ngOnInit() { \n   \n  }\n}\n","module.exports = \".jumbotron {\\r\\n    margin-top: 20px;\\r\\n    padding-top: 30px;\\r\\n    padding-bottom: 30px;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFuZWwvcGFuZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsb0JBQW9COztBQUV4QiIsImZpbGUiOiJzcmMvYXBwL3BhbmVsL3BhbmVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuanVtYm90cm9uIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG5cclxufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core'; //EventEmmiter core do angular\n\nimport { Phrase } from '../shared/phrase.model'\nimport { PHRASES } from './phrases-mock' // importando PHRASES de phrases-mock.ts as frases do array \n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n\n  public phrases: Phrase[] = PHRASES // recuperado o array de frases importado do mock\n  public instruction: string = 'Translate to portuguese: '\n  public answer: string = '' //inicializar com '' para nao ocorrer undefinid\n  public round: number = 0\n  public roundPhrase: Phrase\n  public progress: number = 0\n  public attempts: number = 3 //Isso porque temos 3 tentativas ou 3 coracoes...\n  @Output() public endGame: EventEmitter<string> = new EventEmitter() //decorando com Output() para que este objeto possa ser exposto para componentes pai(app.component).\n\n  constructor() {\n    this.updateRound()\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  public updateAnswer(answer: Event): void { // classe para pegar a resposta do campo de texto com tipo Event\n    this.answer = (<HTMLInputElement>answer.target).value //manda para o $event do panel.component.ts acessando o atributo html do target desse elemento\n  }\n\n  public checkAnswer(): void { //quando o usuario clica em check essa função é disparada\n    //console.log(this.roundPhrase)\n\n    if (this.roundPhrase.phrasePtBr == this.answer) { //this.answer é preenchido com o valor do value do <HTMLInputEmelent>answer.target\n      //ou seja... se a frase digitada for igual a frase correta a instrução continuara...\n      //trocar a pergunta da rodada\n      alert('TRADUCTION IS CORRECT!')\n\n      //trocar a pergunta da rodada\n      this.round++\n\n      //barra de progresso... como são 4 frases, crescerá 25% em cada acerto.\n      this.progress = this.progress + (100 / this.phrases.length)\n\n\n      //concluindo o game\n      if (this.round === 4) {\n        this.endGame.emit('Victory')\n      }\n\n      //atualiza o objeto da rodada\n      this.updateRound()\n\n    } else {\n\n      alert('***TRADUCTION INCORRECT!***')\n\n      //diminuir a variavel attempt/tentativa\n      this.attempts--\n\n      if (this.attempts === -1) {\n        this.endGame.emit('defeat')\n      }\n    }\n\n\n  }\n  public updateRound(): void {\n    this.roundPhrase = this.phrases[this.round]  //aqui recupera-se a frase da rodada no array recuperado de round iniciado em 0 (para ser dinamico)\n\n    //limpar a resposta anterior\n    this.answer = ''\n  }\n}\n","// fazendo o mock dentro de panel porque as frases aparecerao no painel.\r\n//aqui esta o array com as frases usadas....\r\n\r\n import { Phrase } from '../shared/phrase.model' \r\n\r\n export const PHRASES: Phrase[] = [   // array das frases que aparecerao no panel e que será importado para panel.component.ts\r\n    \r\n    { phraseEng: 'I like to learn' , phrasePtBr: 'Eu gosto de aprender' },\r\n    \r\n    { phraseEng: 'I watch tv' , phrasePtBr: 'Eu assisto tv' },\r\n\r\n    { phraseEng: 'How are you?' , phrasePtBr: 'Como vai você?' },\r\n\r\n    { phraseEng: 'I eat bread' , phrasePtBr: 'Eu como pão' }\r\n\r\n]  ","module.exports = \".progress {\\r\\n    background: #EEF8DA;\\r\\n    border: solid 1px #99CE28 \\r\\n}\\r\\n.progress-bar {\\r\\n    background: #99CE28 \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZ3Jlc3MvcHJvZ3Jlc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQjtBQUNKO0FBQ0E7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcHJvZ3Jlc3MvcHJvZ3Jlc3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9ncmVzcyB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRUVGOERBO1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggIzk5Q0UyOCBcclxufVxyXG4ucHJvZ3Jlc3MtYmFyIHtcclxuICAgIGJhY2tncm91bmQ6ICM5OUNFMjggXHJcbn1cclxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.css']\n})\nexport class ProgressComponent implements OnInit {\n\n @Input() public progress: number = 0 // variavel responsavel por jogar o valor da barra via string interpolation para o progress.component.html\n //@Input() - decorando a variavel progress para que possa receber valores do painel externo... (deve-se importar tambem do angular)\n  \n constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n","export class Heart {\r\n    constructor(public full: boolean,\r\n        public urlFullHeart: string = '/assets/heart_full.png',\r\n        public urlEmptyHeart: string = '/assets/heart_empty.png') {\r\n\r\n    }\r\n\r\n    public showHeart(): string {\r\n        if (this.full) {             //se oracao estiver cheio chama a url com a imagem do coracao cheio\r\n            return this.urlFullHeart \r\n        } else {                     //senao chama a url de coracao vazio\r\n            return this.urlEmptyHeart\r\n        }\r\n    }\r\n}","module.exports = \".navbar { \\r\\n    background:#1CB0F6\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9wL3RvcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3RvcC90b3AuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIgeyBcclxuICAgIGJhY2tncm91bmQ6IzFDQjBGNlxyXG59Il19 */\"","//classe que vai controlar a view\r\n\r\nimport { Component } from '@angular/core'\r\n\r\n@Component({   //função component que vem do core do angular ... um decorator\r\n    selector: 'app-top',                      //rotulo usado como html element dentro dos templates\r\n    templateUrl: './top.component.html',     //todo component tem que ter um template e view .... (sao as mesmas coisas)....(recurso visual)\r\n    //styles: [`.exemple { color: red } `]  // CSS in Line exemplo... o ideal é que esteja externo\r\n    styleUrls: ['./top.component.css']     //CSS puxando de um novo componente : top.component.css\r\n})                \r\nexport class TopComponent {\r\n    public title: string = 'Learning Portuguese'\r\n} ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}